<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的ioc，把service配置进来-->
    <bean id = "accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>

    <!--Spring中基于XML的AOP配置步骤
        1. 把通知Bean也交给Spring来管理。
        2. 使用aop:config标签表明开始AOP的配置。
        3. 使用aop:asapect标签表明配置切面
                id:给切面提供唯一标识。
                ref:指定通知类bean的id
        4. 在aop:aspect标签的内部使用对应标签来配置通知的类型
                我们现在实例是让printLog方法在切入点方法执行之前，所以是前置通知。
                aop:before表示后置通知
                    method 用于指定Logger类中哪个方法打是前置通知.
                    pointcut 用于指定切入点表达式，指的是对业务层中哪些方法增强

                切入点表达式的写法：
                    关键字：execution
                    表达式：
                        访问修饰符 返回值 包。包。包。。。类名。方法名
                            public void com.itheima.service.impl.AccountServiceImpl.saveAccount()

                        访问修饰符可以省略，*means all return and all method and package
                        全统配写法 =* *..*.*(..) 有几级包就写几级包，包名可以使用..表示当前包和子包,
                                                ()可以直接写类型名称，比如int，引用类型写包名.类名，比如（java.lang.String)
                                                ** = 全parameter种类，有的
                                                .. = 全parameter，有或无都可以
    -->

    <!-- 配置Logger类 -->
    <bean id ="logger" class="com.itheima.utils.Logger"></bean>

    <!-- 配置AOP -->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知的类型，并且建立通知方法和切入点方法的关联-->
            <aop:before method="printLog" pointcut="execution(* *..*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>




</beans>